instead of keeping all connections in a clientList, is far better to keep clients organized
on their respective rooms as they stablish connections.
Besides, this way we can separate the room logic from the users logic, with room just being a
collection of users connected at a given time.
Rooms:
        Rooms will be a dictionary, this will live in memory as long as there are users connected to it,
        it will have a database representation.
        The room will have a connections array, where users sockets connection will be kept as long as they
        are alive
        Whenever a user tries to connect to a room, if no user is connected to the room at that time,
        lets say that when this happend the room is on a "hold state or so", what the server should do,
        it bring it up again and make it available for all users to connect to it again.
        This means creating an in-memory instance of the room to stablish connections.
        users connect to room usig: ws://localhost/room/id
        

